import { CHOICES_KEY, VULNERABILITIES_KEY, useFetchChallengeQuery } from "@/features/challenge";
import { ChallengeDataType } from "../../types";
import { useSetRecoilState } from "recoil";
import { checkedVulnerabilies } from "../../states/atom";

export const useCreateVulnerabilityValues= () => {
  const vulnerabilityArray= ( challengeData: ChallengeDataType ) => {
    const transArray= challengeData?.[ VULNERABILITIES_KEY ].flatMap(
      (item: { choices: string[]; hint: string; hintScore: number; }) => 
      item[ CHOICES_KEY ]
    );

  // const shuffleData= transArray.sort((a, b) => 0.5 - Math.random());

    const transVulArrayToObject= transArray.map(
      ( value: string, index: number ) => {
        return {
          id: index,
          value: value,
          selected: false
        }
      }
    );

    return transVulArrayToObject;
    // return shuffleData
  };

    return { vulnerabilityArray };    
};