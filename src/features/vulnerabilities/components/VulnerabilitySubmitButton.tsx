import { Button, IconButton } from "@/components/Elements";
import PlayArrowIcon from '@mui/icons-material/PlayArrow';
import { useRecoilValue } from "recoil";
import styled from 'styled-components';
// import { vulnerabiliesFormatSelector } from "..";
import { viewerRefState } from "@/features/webViewer";
import { vulnerabiliesFormatSelector } from "../states/selector/vulnerabilitiesFormatSelector";


const $VulnerabilitySubmitButton= styled(Button)`
  height : 5rem;
  width  : 5rem;
  margin : 0;
`;

export const VulnerabilitySubmitButton= () => {
  const previewRef= useRecoilValue( viewerRefState );
  const value= useRecoilValue( vulnerabiliesFormatSelector );

  
  function handleClick() {
    let names = [];
    const inputs = previewRef?.current.contentDocument.querySelectorAll('input');
    

    names = Array.from(inputs).map((input) => input.name);
    const button = previewRef?.contentWindow.contentDocument.getElementByName(names[0]);
    button.addEventListener('click', () => {
      console.log(names);
    });
    button.click()
  }
  return (
    <$VulnerabilitySubmitButton onClick={handleClick}>
      <PlayArrowIcon />
    </$VulnerabilitySubmitButton>
  );
};