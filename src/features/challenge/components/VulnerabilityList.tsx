import { colors } from '@/assets/styles';
import { vulnerabilityListState } from '@/atoms';
import { CheckBox } from '@/components/Elements';
import { useRecoilState } from 'recoil';
import styled, { css } from 'styled-components';

const _VulnerabilityList= styled.div`
  height: 100%;
  width : 100%;
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(12rem, 1fr)
  );
  grid-template-rows: repeat(
    auto-fill,
    minmax(10rem, 1fr)
  );
`;

const _CheckBoxItem= styled.li`
  height: 5rem;
  width: 10rem;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
`;

const _CheckBox= styled.input`
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  border-radius: 0;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;

  &::before, 
  &::after {
    content: "";
    display: block; 
    position: relative;
  }

  &::before {
    height: 5rem;
    width : 10rem;
    border-radius: 10px;
    
    ${(props) => props.checked
      ? css`
          box-shadow: 3px 3px 1.5px #a0e5dd, -3px -3px 1.5px #a0e5dd, -3px 3px 1.5px #a0e5dd, 3px -3px 1.5px #a0e5dd;
          background: ${ colors.primary };
        `
      : css`
        background: #141414;
        `
    }    
  }
`;

const _CheckBoxLabel= styled.label`
  font-size: 2rem;
  z-index  : 10;
  position: absolute;
  top:50%;
  left: 50%;
  transform: translate(-50%, -50%);

  ${_CheckBox}:checked {
    color:white;
  }
`;

type VulnerabilityListProps= {
  label?: string | undefined;
  values: Array<string>;
  checked: string;
  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;
};

export const VulnerabilityList= (
  {     
    label, 
    values, 
    checked, 
    onChange, 
    ...props
  }: VulnerabilityListProps
) => {
  const [checkboxList, setCheckboxList] = useRecoilState( vulnerabilityListState );
    import axios from "axios";
  
    // 配列を取得する関数
    const getArray = async () => {
      try {
        // get通信で配列を取得
        const response = await axios.get("https://example.com/api/array");
        // 配列をオブジェクトの配列に変換
        const array = response.data.map((item) => ({
          value: item,
          checked: false,
        }));

        setCheckboxList(array);
      } catch (error) {

        console.error(error);
      }
    };

    useEffect(() => {
      getArray();
    }, []);

    const handleChange = (index) => {
      const newList = [...checkboxList];
      newList[index].checked = !newList[index].checked;

      setCheckboxList(newList);
    };
  return (
    <_VulnerabilityList>
      { 
        values.map(( value, index ) => (
          <CheckBox
            id= { `id_${ index }` }
            key={ index }
            value={ value }
            checked={ value.checked }
            onChange={() => }
          />
        ))
      }
    </_VulnerabilityList>
  );
};